# Файл docker-compose должен начинаться с тега версии.
# Мы используем "3" так как это - самая свежая версия на момент написания этого кода.

version: "3"

# Следует учитывать, что docker-composes работает с сервисами. 1 сервис = 1 контейнер.
# Сервисом может быть клиент, сервер, сервер баз данных...
# Раздел, в котором будут описаны сервисы, начинается с 'services'.

services:

  # Будут созданы серверные приложения.
  # Первый сервис (контейнер): сервер. Назвать его можно так, как нужно разработчику.
  # Понятное название сервиса помогает определить его роль.
  # Здесь мы, для именования соответствующего сервиса, используем ключевое слово 'server'.

  server:
 
    # Ключевое слово "build" позволяет задать
    # путь к файлу Dockerfile, который нужно использовать для создания образа,
    # который позволит запустить сервис.
    # Здесь 'server/' соответствует пути к папке сервера,
    # которая содержит соответствующий Dockerfile.

    build: server/

    # Команда, которую нужно запустить после создания образа.
    # Следующая команда означает запуск "node server.js".

    command: node server.js

    # Вспомните о том, что в качестве порта в 'server/server.js' указан порт 8080.
    # Если нужно обратиться к серверу со своего компьютера (находясь за пределами контейнера),
    # следует организовать перенаправление этого порта на порт компьютера.
    # Сделать это поможет ключевое слово 'ports'.
    # При его использовании применяется следующая конструкция: [порт компьютера]:[порт контейнера]
    # В данном случае нужно использовать порт компьютера 8080

    ports:
      - 8081:8080

  # Второй сервис (контейнер): сервер2.
  # Этот сервис назван 'server2'.

  server2:
    # Здесь 'server/ также соответствует пути к папке

    build: server/

    # Команда, которую нужно запустить после создания образа.
    # Следующая команда означает запуск "node server.js".
 
    command: node server.js

    ports:
      - 8082:8080